{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Pipes/filter.pipe.ts","./src/app/Pipes/sort.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/model/property.ts","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/property/add-property/add-property.component.ts","./src/app/property/add-property/add-property.component.html","./src/app/property/property-card/property-card.component.ts","./src/app/property/property-card/property-card.component.html","./src/app/property/property-detail/property-detail-resolver.service.ts","./src/app/property/property-detail/property-detail.component.ts","./src/app/property/property-detail/property-detail.component.html","./src/app/property/property-list/property-list.component.ts","./src/app/property/property-list/property-list.component.html","./src/app/services/alertify.service.ts","./src/app/services/auth.service.ts","./src/app/services/housing.service.ts","./src/app/services/user.service.ts","./src/app/user/user-login/user-login.component.ts","./src/app/user/user-login/user-login.component.html","./src/app/user/user-register/user-register.component.ts","./src/app/user/user-register/user-register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any[], filterString: string, propName: string): any[] {\n\n    const resultArray = [];\n    if (value){\n    if (value.length === 0 || filterString === '' || propName === '') {\n      return value;\n    }\n\n    for (const item of value) {\n      if (item[propName] === filterString) {\n        resultArray.push(item);\n      }\n    }\n    return resultArray;\n  }\n}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value: Array<string>, args: any[]): any {\n    const sortField = args[0];\n    const sortDirection = args[1];\n    let multiplier = 1;\n\n    if (sortDirection === 'desc') {\n      multiplier = -1;\n    }\n\n    value.sort((a: any, b: any) => {\n      if (a[sortField] < b[sortField]) {\n        return -1 * multiplier;\n      } else if (a[sortField] > b[sortField]) {\n        return 1 * multiplier;\n      } else {\n        return 0;\n      }\n    }\n    );\n\n    return value;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\n\nexport class AppComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() { }\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\" style=\"margin-top: 70px;\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {Routes, RouterModule} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport {PropertyDetailResolverService} from './property/property-detail/property-detail-resolver.service';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\n\nimport { AppComponent } from './app.component';\nimport { PropertyCardComponent } from './property/property-card/property-card.component';\nimport { PropertyListComponent } from './property/property-list/property-list.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { HousingService } from './services/housing.service';\nimport { AddPropertyComponent } from './property/add-property/add-property.component';\nimport { PropertyDetailComponent } from './property/property-detail/property-detail.component';\nimport { UserRegisterComponent } from './user/user-register/user-register.component';\nimport { UserLoginComponent } from './user/user-login/user-login.component';\nimport { UserService } from './services/user.service';\nimport { AlertifyService } from './services/alertify.service';\nimport { AuthService } from './services/auth.service';\nimport { FilterPipe } from './Pipes/filter.pipe';\nimport { SortPipe } from './Pipes/sort.pipe';\n\nconst appRoutes: Routes = [\n  {path: '', component: PropertyListComponent},\n  {path: 'rent-property', component: PropertyListComponent},\n  {path: 'add-property', component: AddPropertyComponent},\n  {path: 'property-detail/:id',\n          component: PropertyDetailComponent,\n          resolve: {prp: PropertyDetailResolverService}},\n  {path: 'user/login', component: UserLoginComponent},\n  {path: 'user/register', component: UserRegisterComponent},\n  {path: '**', component: PropertyListComponent}\n]\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      PropertyCardComponent,\n      PropertyListComponent,\n      NavBarComponent,\n      AddPropertyComponent,\n      PropertyDetailComponent,\n      UserRegisterComponent,\n      UserLoginComponent,\n      FilterPipe,\n      SortPipe\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      RouterModule.forRoot(appRoutes),\n      BrowserAnimationsModule,\n      BsDropdownModule.forRoot(),\n      TabsModule.forRoot(),\n      ButtonsModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      NgxGalleryModule\n   ],\n   providers: [\n     HousingService,\n     UserService,\n     AlertifyService,\n     AuthService,\n     PropertyDetailResolverService\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { IPropertyBase } from './ipropertybase';\n\nexport class Property implements IPropertyBase {\n  Id: number;\n  SellRent: number;\n  Name: string;\n  PType: string;\n  BHK: number;\n  FType: string;\n  Price: number;\n  BuiltArea: number;\n  CarpetArea?: number;\n  Address: string;\n  Address2?: string;\n  City: string;\n  FloorNo?: string;\n  TotalFloor?: string;\n  RTM: number;\n  AOP?: string;\n  MainEntrance?: string;\n  Security?: number;\n  Gated?: number;\n  Maintenance?: number;\n  Possession?: string;\n  Image?: string;\n  Description?: string;\n  PostedOn: string;\n  PostedBy: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  loggedinUser: string;\n  constructor(private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  loggedin() {\n    this.loggedinUser = localStorage.getItem('token');\n    return this.loggedinUser;\n  }\n\n  onLogout() {\n    localStorage.removeItem('token');\n    this.alertify.success(\"You are logged out !\");\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n  <a class=\"navbar-brand\" href=\"/\">HSPA</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLinkActiveOptions]=\"{exact:true}\" routerLinkActive=\"active\" routerLink=\"/\">Buy <span class=\"sr-only\">(current)</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/rent-property\">Rent</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\"  routerLink=\"/add-property\">List Property (Free)</a>\n      </li>\n    </ul>\n\n    <div>\n      <ul class=\"nav navbar-nav\">\n        <li *ngIf=\"!loggedin()\" class=\"nav-item\">\n          <a class=\"nav-link\"\n          routerLink=\"user/register\"\n          routerLinkActive=\"active\"\n          >Register</a>\n        </li>\n        <li *ngIf=\"!loggedin()\" class=\"nav-item\">\n          <a class=\"nav-link\"\n          routerLink=\"user/login\"\n          routerLinkActive=\"active\"\n          >Login</a>\n        </li>\n        <!-- <li *ngIf=\"loggedin()\" class=\"nav-item\">\n          <a class=\"nav-link\" (click)=\"onLogout()\"\n          >Logout</a>\n        </li> -->\n        <div *ngIf=\"loggedin()\" class=\"dropdown mr-5\" dropdown>\n          <a href=\"#\" class=\"dropdown-toggle text-light\" dropdownToggle (click)=\"false\">\n              Welcome {{loggedinUser}}\n          </a>\n          <div class=\"dropdown-menu\" *dropdownMenu>\n              <a href=\"#\"class=\"dropdown-item\">\n                <i class=\"fas fa-tachometer-alt\"></i> View Dashboard</a>\n              <a href=\"#\" class=\"dropdown-item\">\n                <i class=\"far fa-user-circle\"></i> My Profile</a>\n              <a href=\"#\" class=\"dropdown-item\">\n                <i class=\"fas fa-key\"></i> Change Password</a>\n              <a (click)='onLogout()' class=\"dropdown-item\">\n                <i class=\"fas fa-sign-out-alt\"></i> Logout</a>\n          </div>\n        </div>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs/public_api';\nimport { IPropertyBase } from 'src/app/model/ipropertybase';\nimport { Property } from 'src/app/model/property';\nimport { HousingService } from 'src/app/services/housing.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\n\n\n@Component({\n  selector: 'app-add-property',\n  templateUrl: './add-property.component.html',\n  styleUrls: ['./add-property.component.css']\n})\nexport class AddPropertyComponent implements OnInit {\n  // @ViewChild('Form') addPropertyForm: NgForm;\n  @ViewChild('formTabs') formTabs: TabsetComponent;\n  addPropertyForm: FormGroup;\n  nextClicked: boolean;\n  property = new Property();\n\n  // Will come from masters\n  propertyTypes: Array<string> = ['House', 'Apartment', 'Duplex']\n  furnishTypes: Array<string> = ['Fully', 'Semi', 'Unfurnished']\n\n  propertyView: IPropertyBase = {\n    Id: null,\n    Name: '',\n    Price: null,\n    SellRent: null,\n    PType: null,\n    FType: null,\n    BHK: null,\n    BuiltArea: null,\n    City: null,\n    RTM: null\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private housingService: HousingService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.CreateAddPropertyForm();\n  }\n\n  CreateAddPropertyForm() {\n    this.addPropertyForm = this.fb.group({\n      BasicInfo: this.fb.group({\n        SellRent: ['1' , Validators.required],\n        BHK: [null, Validators.required],\n        PType: [null, Validators.required],\n        FType: [null, Validators.required],\n        Name: [null, Validators.required],\n        City: [null, Validators.required]\n      }),\n\n      PriceInfo: this.fb.group({\n        Price: [null, Validators.required],\n        BuiltArea: [null, Validators.required],\n        CarpetArea: [null],\n        Security: [null],\n        Maintenance: [null],\n      }),\n\n      AddressInfo: this.fb.group({\n        FloorNo: [null],\n        TotalFloor: [null],\n        Address: [null, Validators.required],\n        LandMark: [null],\n      }),\n\n      OtherInfo: this.fb.group({\n        RTM: [null, Validators.required],\n        PossessionOn: [null],\n        AOP: [null],\n        Gated: [null],\n        MainEntrance: [null],\n        Description: [null]\n      })\n      });\n  }\n\n//#region <Getter Methods>\n  // #region <FormGroups>\n      get BasicInfo() {\n        return this.addPropertyForm.controls.BasicInfo as FormGroup;\n      }\n\n      get PriceInfo() {\n        return this.addPropertyForm.controls.PriceInfo as FormGroup;\n      }\n\n      get AddressInfo() {\n        return this.addPropertyForm.controls.AddressInfo as FormGroup;\n      }\n\n      get OtherInfo() {\n        return this.addPropertyForm.controls.OtherInfo as FormGroup;\n      }\n  // #endregion\n\n  //#region <Form Controls>\n      get SellRent() {\n        return this.BasicInfo.controls.SellRent as FormControl;\n      }\n\n      get BHK() {\n        return this.BasicInfo.controls.BHK as FormControl;\n      }\n\n      get PType() {\n        return this.BasicInfo.controls.PType as FormControl;\n      }\n\n      get FType() {\n        return this.BasicInfo.controls.FType as FormControl;\n      }\n\n      get Name() {\n        return this.BasicInfo.controls.Name as FormControl;\n      }\n\n      get City() {\n        return this.BasicInfo.controls.City as FormControl;\n      }\n\n      get Price() {\n        return this.PriceInfo.controls.Price as FormControl;\n      }\n\n      get BuiltArea() {\n        return this.PriceInfo.controls.BuiltArea as FormControl;\n      }\n\n      get CarpetArea() {\n        return this.PriceInfo.controls.CarpetArea as FormControl;\n      }\n\n      get Security() {\n        return this.PriceInfo.controls.Security as FormControl;\n      }\n\n      get Maintenance() {\n        return this.PriceInfo.controls.Maintenance as FormControl;\n      }\n\n      get FloorNo() {\n        return this.AddressInfo.controls.FloorNo as FormControl;\n      }\n\n      get TotalFloor() {\n        return this.AddressInfo.controls.TotalFloor as FormControl;\n      }\n\n      get Address() {\n        return this.AddressInfo.controls.Address as FormControl;\n      }\n\n      get LandMark() {\n        return this.AddressInfo.controls.LandMark as FormControl;\n      }\n\n      get RTM() {\n        return this.OtherInfo.controls.RTM as FormControl;\n      }\n\n      get PossessionOn() {\n        return this.OtherInfo.controls.PossessionOn as FormControl;\n      }\n\n      get AOP() {\n        return this.OtherInfo.controls.AOP as FormControl;\n      }\n\n      get Gated() {\n        return this.OtherInfo.controls.Gated as FormControl;\n      }\n\n      get MainEntrance() {\n        return this.OtherInfo.controls.MainEntrance as FormControl;\n      }\n\n      get Description() {\n        return this.OtherInfo.controls.Description as FormControl;\n      }\n\n  //#endregion\n//#endregion\n\n  onBack() {\n    this.router.navigate(['/']);\n  }\n\n  onSubmit() {\n    this.nextClicked = true;\n    if (this.allTabsValid()) {\n      this.mapProperty();\n      this.housingService.addProperty(this.property);\n      this.alertify.success('Congrats, your property listed successfully on our website');\n      console.log(this.addPropertyForm);\n\n      if(this.SellRent.value === '2') {\n        this.router.navigate(['/rent-property']);\n      } else {\n        this.router.navigate(['/']);\n      }\n\n\n    } else {\n      this.alertify.error('Please review the form and provide all valid entries');\n    }\n  }\n\n  mapProperty(): void {\n    this.property.Id = this.housingService.newPropID();\n    this.property.SellRent = +this.SellRent.value;\n    this.property.BHK = this.BHK.value;\n    this.property.PType = this.PType.value;\n    this.property.Name = this.Name.value;\n    this.property.City = this.City.value;\n    this.property.FType = this.FType.value;\n    this.property.Price = this.Price.value;\n    this.property.Security = this.Security.value;\n    this.property.Maintenance = this.Maintenance.value;\n    this.property.BuiltArea = this.BuiltArea.value;\n    this.property.CarpetArea = this.CarpetArea.value;\n    this.property.FloorNo = this.FloorNo.value;\n    this.property.TotalFloor = this.TotalFloor.value;\n    this.property.Address = this.Address.value;\n    this.property.Address2 = this.LandMark.value;\n    this.property.RTM = this.RTM.value;\n    this.property.AOP = this.AOP.value;\n    this.property.Gated = this.Gated.value;\n    this.property.MainEntrance = this.MainEntrance.value;\n    this.property.Possession = this.PossessionOn.value;\n    this.property.Description = this.Description.value;\n    this.property.PostedOn = new Date().toString();\n  }\n\n  allTabsValid(): boolean {\n    if (this.BasicInfo.invalid) {\n      this.formTabs.tabs[0].active = true;\n      return false;\n    }\n\n    if (this.PriceInfo.invalid) {\n      this.formTabs.tabs[1].active = true;\n      return false;\n    }\n\n    if (this.AddressInfo.invalid) {\n      this.formTabs.tabs[2].active = true;\n      return false;\n    }\n\n    if (this.OtherInfo.invalid) {\n      this.formTabs.tabs[3].active = true;\n      return false;\n    }\n    return true;\n  }\n\n  selectTab(NextTabId: number, IsCurrentTabValid: boolean) {\n    this.nextClicked = true;\n    if (IsCurrentTabValid) {\n      this.formTabs.tabs[NextTabId].active = true;\n    }\n  }\n\n}\n","<div class=\"row mb-5\">\n  <div class=\"col-8 shadow-lg p-0 bg-white\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h3>List your Property</h3>\n      </div>\n      <div class=\"card-body\">\n        <form (ngSubmit)='onSubmit()' [formGroup]=\"addPropertyForm\">\n          <div class=\"tab-panel\">\n            <tabset class=\"member-tabset\" #formTabs>\n              <tab heading=\"Basic Info\" formGroupName=\"BasicInfo\" >\n                <div class=\"form-group col-12\">\n                <p>I want to</p>\n                  <div class=\"btn-group\"\n                  btnRadioGroup\n                  formControlName=\"SellRent\">\n                    <label class=\"btn btn-outline-primary mr-2\"\n                    btnRadio=1 tabindex=\"0\" role=\"button\" name=\"SellRent\">Sell</label>\n                    <label class=\"btn btn-outline-primary\"\n                    btnRadio=2  tabindex=\"0\" role=\"button\" name=\"SellRent\">Rent</label>\n                  </div>\n                  <div class=\"error-block\" *ngIf=\"SellRent.invalid && nextClicked\">\n                    Please select sell or rent\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <p>BHK</p>\n                  <div class=\"btn-group\" btnRadioGroup\n                  formControlName=\"BHK\"\n                  [(ngModel)]=\"propertyView.BHK\" name=\"BHK\">\n                    <label\n                      *ngFor=\"let bhk of [1,2,3,4]\"\n                      class=\"btn btn-outline-primary mr-2\"\n                      [btnRadio]=\"bhk\" tabindex=\"0\" role=\"button\"\n                      name=\"BHK\">\n                      {{bhk}}\n                    </label>\n                  </div>\n                  <div class=\"error-block\" *ngIf=\"BHK.invalid && nextClicked\">\n                    Please select BHK\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <p>Property Type</p>\n                  <div class=\"btn-group\" btnRadioGroup\n                  formControlName='PType'\n                  [(ngModel)]=\"propertyView.PType\">\n                    <label\n                    *ngFor=\"let ptype of propertyTypes\"\n                    class=\"btn btn-outline-primary mr-2\"\n                    [btnRadio]=\"ptype\" tabindex=\"0\" role=\"button\"\n                    name=\"PropType\">{{ptype}}\n                  </label>\n                  </div>\n                  <div class=\"error-block\" *ngIf=\"PType.invalid && nextClicked\">\n                    Please select property type\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <p>Furnishing Type</p>\n                  <div class=\"btn-group\" btnRadioGroup\n                  formControlName=\"FType\"\n                  [(ngModel)]=\"propertyView.FType\">\n                  <label\n                    *ngFor=\"let ftype of furnishTypes\"\n                    class=\"btn btn-outline-primary mr-2\"\n                    [btnRadio]=\"ftype\" tabindex=\"0\" role=\"button\"\n                    name=\"FurnishType\">\n                    {{ftype}}\n                  </label>\n                  </div>\n                  <div class=\"error-block\" *ngIf=\"FType.invalid && nextClicked\">\n                    Please select furnishing type\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>in Building/Society/Project</label>\n                  <input type=\"text\" class=\"form-control\"\n                  ngModel\n                  formControlName=\"Name\"\n                  [(ngModel)]=\"propertyView.Name\">\n                  <div class=\"error-block\"\n                  *ngIf=\"Name.invalid && (nextClicked || Name.touched)\">\n                    Please select building, society or project name\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>City</label>\n                  <input type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"City\"\n                  [(ngModel)]=\"propertyView.City\">\n                  <div class=\"error-block\"\n                  *ngIf=\"City.invalid && (nextClicked || City.touched)\">\n                    Please select city\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                    <button type=\"button\"\n                    class=\"btn btn-primary btn-block\"\n                    (click)=\"selectTab(1, BasicInfo.valid)\">Next</button>\n                </div>\n              </tab>\n\n              <tab heading=\"Pricing and Area\" formGroupName=\"PriceInfo\">\n                  <div class=\"form-group col-12\">\n                    <label *ngIf=\"SellRent.value==1\">Price (in USD)</label>\n                    <label *ngIf=\"SellRent.value==2\">Rent (in USD)</label>\n                    <input type=\"text\" class=\"form-control\"\n                    formControlName=\"Price\"\n                    [(ngModel)]=\"propertyView.Price\">\n                    <div class=\"error-block\"\n                    *ngIf=\"Price.invalid && (nextClicked || Price.touched)\">\n                      Please select\n                      <span *ngIf=\"SellRent.value==1;else ShowRent\">price</span>\n                      <ng-template #ShowRent>rent</ng-template>\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"SellRent.value==2\">\n                    <div class=\"form-group col-12\">\n                      <label>Security (in USD)</label>\n                      <input type=\"text\"\n                      formControlName=\"Security\"\n                      class=\"form-control\">\n                    </div>\n\n                    <div class=\"form-group col-12\">\n                      <label>Maintenance (in USD)</label>\n                      <input type=\"text\"\n                      formControlName=\"Maintenance\"\n                      class=\"form-control\">\n                    </div>\n                  </div>\n\n                  <div class=\"form-group col-12\">\n                    <label>Built Area (in Sqr Feet)</label>\n                    <input type=\"text\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"propertyView.BuiltArea\"\n                    formControlName=\"BuiltArea\">\n                    <div class=\"error-block\"\n                    *ngIf=\"BuiltArea.invalid && nextClicked\">\n                      Please select built up area\n                    </div>\n                  </div>\n\n                  <div class=\"form-group col-12\">\n                    <label>Carpet Area (in Sqr Feet)</label>\n                    <input type=\"text\"\n                    formControlName=\"CarpetArea\"\n                    class=\"form-control\">\n                  </div>\n\n                  <div class=\"form-group col-12\">\n                    <button type=\"button\" class=\"btn btn-primary btn-block\"\n                    (click)=\"selectTab(2, PriceInfo.valid)\">Next</button>\n\n                    <button type=\"button\" class=\"btn btn-primary btn-block\"\n                    (click)=\"selectTab(0, PriceInfo.valid)\">Back</button>\n                  </div>\n              </tab>\n\n              <tab heading=\"Address\" formGroupName=\"AddressInfo\">\n\n                <div class=\"form-group col-12\">\n                  <label>Floor</label>\n                  <input type=\"text\"\n                  formControlName=\"FloorNo\"\n                  class=\"form-control\">\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>Total Floor</label>\n                  <input type=\"text\"\n                  formControlName=\"TotalFloor\"\n                  class=\"form-control\">\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>Address</label>\n                  <input type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"Address\">\n                  <div class=\"error-block\"\n                  *ngIf=\"Address.invalid && (nextClicked || Address.touched)\">\n                    Please select address\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>Landmark</label>\n                  <input type=\"text\"\n                  formControlName=\"LandMark\"\n                  class=\"form-control\">\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <button type=\"button\" class=\"btn btn-primary btn-block\"\n                  (click)=\"selectTab(3, AddressInfo.valid)\">Next</button>\n\n                  <button type=\"button\" class=\"btn btn-primary btn-block\"\n                  (click)=\"selectTab(1, AddressInfo.valid)\">Back</button>\n                </div>\n              </tab>\n\n              <tab heading=\"Other Details\" formGroupName=\"OtherInfo\">\n                <div class=\"form-group col-12\">\n                  <p>Ready to Move</p>\n                  <div class=\"btn-group\" btnRadioGroup\n                  formControlName=\"RTM\">\n                    <label class=\"btn btn-outline-primary mr-2\"\n                      btnRadio=1 tabindex=\"0\" role=\"button\"\n                      name=\"RTM\">Yes\n                    </label>\n                    <label class=\"btn btn-outline-primary\"\n                      btnRadio=2  tabindex=\"0\" role=\"button\" name=\"RTM\">No\n                    </label>\n                  </div>\n                  <div class=\"error-block\" *ngIf=\"RTM.invalid && nextClicked\">\n                    Please select ready to move\n                  </div>\n                </div>\n\n\n                <div\n                *ngIf=\"RTM.value==2\"\n                class=\"form-group col-6\">\n                  <label>Possession/Avaialble From</label>\n                  <input type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"PossessionOn\"\n                  bsDatepicker\n                  [bsConfig]=\"{containerClass: 'theme-dark-blue',\n                  dateInputFormat: 'DD-MM-YYYY'}\">\n                </div>\n\n                <div\n                *ngIf=\"RTM.value==1\"\n                class=\"form-group col-3\">\n                  <label>Age of Property</label>\n                  <input type=\"text\"\n                  formControlName=\"AOP\"\n                  class=\"form-control\">\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <p>Gated Community</p>\n                  <div class=\"btn-group\"\n                  btnRadioGroup\n                  formControlName=\"Gated\">\n                    <label class=\"btn btn-outline-primary mr-2\"\n                    btnRadio=1 tabindex=\"0\" role=\"button\" name=\"Gated\">Yes</label>\n                    <label class=\"btn btn-outline-primary\"\n                    btnRadio=2  tabindex=\"0\" role=\"button\" name=\"Gated\">No</label>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <p>Main Entrance</p>\n                  <div class=\"btn-group\" btnRadioGroup\n                  formControlName=\"MainEntrance\">\n                    <label class=\"btn btn-outline-primary mr-2\"\n                    btnRadio=1 tabindex=\"0\" role=\"button\" name=\"Entrance\">East</label>\n                    <label class=\"btn btn-outline-primary\"\n                    btnRadio=2  tabindex=\"0\" role=\"button\" name=\"Entrance\">West</label>\n                    <label class=\"btn btn-outline-primary\"\n                    btnRadio=3  tabindex=\"0\" role=\"button\" name=\"Entrance\">South</label>\n                    <label class=\"btn btn-outline-primary\"\n                    btnRadio=4  tabindex=\"0\" role=\"button\" name=\"Entrance\">North</label>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>Description</label>\n                  <textarea type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"Description\"\n                  rows=\"6\"></textarea>\n                </div>\n\n                <div class=\"form-group col-12\">\n                    <button type=\"button\" class=\"btn btn-primary btn-block\"\n                    (click)=\"selectTab(4, OtherInfo.valid)\">Next</button>\n\n                    <button type=\"button\" class=\"btn btn-primary btn-block\"\n                    (click)=\"selectTab(2, OtherInfo.valid)\">Back</button>\n                </div>\n              </tab>\n\n              <tab heading=\"Photos\">\n                <div class=\"form-group col-12\">\n                  <div class=\"photo-control\">\n                      <button class=\"mt-5\" type=\"button\">Upload</button> <br>\n                      This is under construction\n                  </div>\n                </div>\n                <div class=\"form-group col-12\">\n                  <button type=\"button\" class=\"btn btn-primary btn-block\"\n                  (click)=\"selectTab(3, true)\">Back</button>\n                  <button type=\"submit\" class=\"btn btn-primary btn-block\">Save</button>\n                  <button type=\"reset\" class=\"btn btn-primary btn-block\">Cancel</button>\n                </div>\n              </tab>\n            </tabset>\n          </div>\n        </form>\n      </div>\n  </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card-header\">\n      <h3>Your Property Preview</h3>\n    </div>\n    <div class=\"shadow-lg p-3 bg-white\">\n      <app-property-card [property]=\"propertyView\" hideIcons=\"true\"></app-property-card>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { IPropertyBase } from 'src/app/model/ipropertybase';\n\n\n@Component({\n  selector: 'app-property-card',\n  // template: `<h1>I am a card</h1>`,\n  templateUrl: 'property-card.component.html',\n  // styles: ['h1 {font-weight: normal;}']\n  styleUrls: ['property-card.component.css']\n}\n\n)\nexport class PropertyCardComponent {\n@Input() property: IPropertyBase;\n@Input() hideIcons: boolean;\n\n}\n","<div class=\"card\">\n  <div class=\"card-img-wrapper\">\n    <img *ngIf=\"property.Image\" class=\"card-img-top\" src=\"assets/images/{{property.Image}}.png\">\n    <img *ngIf=\"!property.Image\" class=\"card-img-top\" src=\"assets/images/house_default.png\">\n    <ul *ngIf=\"!hideIcons\" class=\"list-inline text-center member-icons animate\">\n      <li class=\"list-inline-item\">\n        <button class=\"btn btn-primary\" routerLink=\"/property-detail/{{property.Id}}\"><i class=\"far fa-edit\"></i></button>\n      </li>\n      <li class=\"list-inline-item\">\n        <button class=\"btn btn-primary\"><i class=\"far fa-address-book\"></i></button>\n      </li>\n    </ul>\n\n  </div>\n  <div class=\"card-body p-1\">\n    <h1 class=\"mb-0\"> {{property.BHK}} BHK {{property.PType}} </h1>\n\n    in {{property.Name}}\n    <span *ngIf=\"property.Name\">,</span>\n    {{property.City}}\n\n    <h6  class=\"mt-2\">{{property.FType}}\n    <span *ngIf=\"property.FType !== 'Unfurnished'\">Furnished</span> | Ready to Move</h6>\n\n    <hr class=\"mt-0 mb-2\">\n\n    <h6 class=\"mb-0\">Price: <span class=\"font-highlight\">{{property.Price}} USD.</span> |\n      Area:  <span class=\"font-highlight\">{{property.BuiltArea}} Sq Ft </span> </h6>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { Property } from 'src/app/model/property';\nimport { Observable, of } from 'rxjs';\nimport { HousingService } from 'src/app/services/housing.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropertyDetailResolverService implements Resolve<Property> {\n\nconstructor(private router: Router,  private housingService: HousingService) { }\n\nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n  Observable<Property>|Property {\n    const propId = route.params['id'];\n    return this.housingService.getProperty(+propId).pipe(\n      catchError(error => {\n        this.router.navigate(['/']);\n        return of(null);\n      })\n    );\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HousingService } from 'src/app/services/housing.service';\nimport { Property } from 'src/app/model/property';\nimport {NgxGalleryOptions} from '@kolkov/ngx-gallery';\nimport {NgxGalleryImage} from '@kolkov/ngx-gallery';\nimport {NgxGalleryAnimation} from '@kolkov/ngx-gallery';\n\n@Component({\n  selector: 'app-property-detail',\n  templateUrl: './property-detail.component.html',\n  styleUrls: ['./property-detail.component.css']\n})\nexport class PropertyDetailComponent implements OnInit {\npublic propertyId: number;\nproperty = new Property();\ngalleryOptions: NgxGalleryOptions[];\ngalleryImages: NgxGalleryImage[];\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private housingService: HousingService) { }\n\n  ngOnInit() {\n    this.propertyId = +this.route.snapshot.params['id'];\n    this.route.data.subscribe(\n      (data: Property) => {\n        this.property = data['prp'];\n      }\n    );\n\n    // this.route.params.subscribe(\n    //   (params) => {\n    //     this.propertyId = +params['id'];\n    //     this.housingService.getProperty(this.propertyId).subscribe(\n    //       (data: Property) => {\n    //         this.property = data;\n    //       }, error => this.router.navigate(['/'])\n    //     );\n    //   }\n    // );\n\n    this.galleryOptions = [\n      {\n        width: '100%',\n        height: '465px',\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: true\n      }\n    ];\n\n    this.galleryImages = [\n      {\n        small: 'assets/images/internal-1.jpg',\n        medium: 'assets/images/internal-1.jpg',\n        big: 'assets/images/internal-1.jpg'\n      },\n      {\n        small: 'assets/images/internal-2.jpg',\n        medium: 'assets/images/internal-2.jpg',\n        big: 'assets/images/internal-2.jpg'\n      },\n      {\n        small: 'assets/images/internal-3.jpg',\n        medium: 'assets/images/internal-3.jpg',\n        big: 'assets/images/internal-3.jpg'\n      },\n      {\n        small: 'assets/images/internal-4.jpg',\n        medium: 'assets/images/internal-4.jpg',\n        big: 'assets/images/internal-4.jpg'\n      },\n      {\n        small: 'assets/images/internal-5.jpg',\n        medium: 'assets/images/internal-5.jpg',\n        big: 'assets/images/internal-5.jpg'\n      }\n    ];\n\n\n  }\n}\n","<div class=\"row shadow\">\n  <div class=\"col-sm-4 p-0\">\n    <div class=\"card\">\n      <div class=\"card-img-wrapper\">\n        <img *ngIf=\"property.Image\" class=\"card-img-top\" src=\"assets/images/{{property.Image}}.png\">\n        <img *ngIf=\"!property.Image\" class=\"card-img-top\" src=\"assets/images/house_default.png\">\n      </div>\n      <div class=\"card-body\">\n        <h1 class=\"card-title\">{{property.Name}}</h1>\n        <div>\n            <strong>{{property.BHK}} BHK {{property.PType}} @ ${{property.Price}}</strong>\n        </div>\n        <div>\n           <strong>in {{property.City}}</strong>\n        </div> <hr>\n        <div>\n            <strong>Build Area: </strong>\n            {{property.BuiltArea}} Sqft\n        </div>\n\n        <div>\n            <strong>Carpet Area: </strong>\n            {{property.CarpetArea}} Sqft\n        </div>\n        <div>\n            <strong>Furnishing Type: </strong>\n            {{property.FType}}\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group d-flex\">\n          <button class=\"btn btn-primary\">Like</button>\n          <button class=\"btn btn-success\">Message</button>\n        </div>\n      </div>\n  </div>\n  </div>\n  <div class=\"col-sm-8 p-0\">\n    <div class=\"tab-panel p-3\">\n      <tabset class=\"member-tabset\">\n        <tab heading=\"Overview\">\n          <h1>Overview</h1>\n          <div class=\"row\">\n              <div class=\"col-sm-6\">\n                  <div class=\"heading\">\n                      <strong>Project Name</strong>\n                      <p>{{property.Name}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Floor Number</strong>\n                      <p>{{property.FloorNo}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Age of Property</strong>\n                      <p>{{property.AOP}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Posession</strong>\n                      <p>{{property.Possession}}</p>\n                  </div>\n              </div>\n\n              <div class=\"col-sm-6\">\n                  <div class=\"heading\">\n                      <strong>Main Entrance</strong>\n                      <p>{{property.MainEntrance}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Gated Community</strong>\n                      <p>{{property.Gated}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Security Deposit</strong>\n                      <p>{{property.Security}}</p>\n                  </div>\n                  <div class=\"heading\">\n                      <strong>Maintenance</strong>\n                      <p>{{property.Maintenance}}</p>\n                  </div>\n              </div>\n              <div class=\"col-sm-12\">\n                  <div class=\"heading\">\n                      <strong>About Property</strong>\n                      <p>{{property.Description}}</p>\n                  </div>\n              </div>\n            </div>\n        </tab>\n        <tab heading=\"Address\">\n          <div class=\"col-sm-12\">\n            <h1>Address</h1>\n            <div class=\"heading\">\n                <strong>{{property.Address}}</strong><br/>\n                <strong>{{property.Address2}}</strong><br/>\n                <strong>{{property.City}}</strong>\n            </div>\n        </div>\n\n        </tab>\n        <tab heading=\"Photos\">\n          <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"></ngx-gallery>\n        </tab>\n        <tab heading=\"Contact\">\n          <h1>Contact Detail</h1>\n          This should be restricted area and only registered user should be able to see seller contact details\n        </tab>\n      </tabset>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HousingService } from 'src/app/services/housing.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { IPropertyBase } from 'src/app/model/ipropertybase';\n\n@Component({\n  selector: 'app-property-list',\n  templateUrl: './property-list.component.html',\n  styleUrls: ['./property-list.component.css']\n})\nexport class PropertyListComponent implements OnInit {\n  SellRent = 1;\n  properties: IPropertyBase[];\n  Today = new Date();\n  City = '';\n  SearchCity = '';\n  SortbyParam = '';\n  SortDirection = 'asc';\n\n  constructor(private route: ActivatedRoute, private housingService: HousingService) { }\n\n  ngOnInit(): void {\n    if (this.route.snapshot.url.toString()) {\n      this.SellRent = 2; // Means we are on rent-property URL else we are on base URL\n    }\n    this.housingService.getAllProperties(this.SellRent).subscribe(\n        data => {\n        this.properties = data;\n        console.log(data);\n      }, error => {\n        console.log('httperror:');\n        console.log(error);\n      }\n    );\n  }\n\n  onCityFilter() {\n    this.SearchCity = this.City;\n  }\n\n  onCityFilterClear() {\n    this.SearchCity = '';\n    this.City = '';\n  }\n\n  onSortDirection() {\n    if (this.SortDirection === 'desc') {\n      this.SortDirection = 'asc';\n    } else {\n      this.SortDirection = 'desc';\n    }\n  }\n\n}\n","<label>Filter City: &nbsp; </label>\n<input [(ngModel)]='City'>\n<button type=\"button\" (click)=\"onCityFilter()\">Search</button>\n<button type=\"button\" (click)=\"onCityFilterClear()\">Clear</button> &nbsp;\n\n<label>Sort by &nbsp;</label>\n<select [(ngModel)] = 'SortbyParam'>\n  <option value=\"City\">City</option>\n  <option value=\"Price\">Price</option>\n</select>\n<button type=\"button\" (click) = \"onSortDirection()\">\n  <i *ngIf=\"SortDirection==='asc'\" class=\"fas fa-sort-alpha-down\"></i>\n  <i *ngIf=\"SortDirection==='desc'\" class=\"fas fa-sort-alpha-up\"></i>\n</button>\n\n<div class=\"row\">\n  <div *ngFor=\"let property of properties|filter:SearchCity:'City'|sort:[SortbyParam,SortDirection]\"\n  class=\"col-sm-4\">\n    <div class=\"shadow-lg p-3 mb-4\">\n        <app-property-card [property]=\"property\"></app-property-card>\n    </div>\n</div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport * as alertyfy from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\nsuccess(message: string) {\n  alertyfy.success(message);\n}\n\nwarning(message: string) {\n  alertyfy.warning(message);\n}\n\nerror(message: string) {\n  alertyfy.error(message);\n}\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\nconstructor() { }\n\nauthUser(user: any) {\n  let UserArray = [];\n  if (localStorage.getItem('Users')) {\n    UserArray = JSON.parse(localStorage.getItem('Users'));\n  }\n  return UserArray.find(p => p.userName === user.userName && p.password === user.password);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { IProperty } from '../model/iproperty';\nimport { IPropertyBase } from '../model/ipropertybase';\nimport { Property } from '../model/property';\nimport { error } from '@angular/compiler/src/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HousingService {\n\n  constructor(private http: HttpClient) { }\n\n  getProperty(id: number) {\n    return this.getAllProperties().pipe(\n      map(propertiesArray => {\n        // throw new Error('Some error');\n        return propertiesArray.find(p => p.Id === id);\n      })\n    );\n  }\n\n  getAllProperties(SellRent?: number): Observable<Property[]> {\n    return this.http.get('data/properties.json').pipe(\n      map(data => {\n      const propertiesArray: Array<Property> = [];\n      const localProperties = JSON.parse(localStorage.getItem('newProp'));\n\n      if (localProperties) {\n        for (const id in localProperties) {\n          if (SellRent) {\n          if (localProperties.hasOwnProperty(id) && localProperties[id].SellRent === SellRent) {\n            propertiesArray.push(localProperties[id]);\n          }\n        } else {\n          propertiesArray.push(localProperties[id]);\n        }\n        }\n      }\n\n      for (const id in data) {\n        if (SellRent) {\n          if (data.hasOwnProperty(id) && data[id].SellRent === SellRent) {\n            propertiesArray.push(data[id]);\n          }\n          } else {\n            propertiesArray.push(data[id]);\n        }\n      }\n      return propertiesArray;\n      })\n    );\n\n    return this.http.get<Property[]>('data/properties.json');\n  }\n  addProperty(property: Property) {\n    let newProp = [property];\n\n    // Add new property in array if newProp alreay exists in local storage\n    if (localStorage.getItem('newProp')) {\n      newProp = [property,\n                  ...JSON.parse(localStorage.getItem('newProp'))];\n    }\n\n    localStorage.setItem('newProp', JSON.stringify(newProp));\n  }\n\n  newPropID() {\n    if (localStorage.getItem('PID')) {\n      localStorage.setItem('PID', String(+localStorage.getItem('PID') + 1));\n      return +localStorage.getItem('PID');\n    } else {\n      localStorage.setItem('PID', '101');\n      return 101;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\nconstructor() { }\n\naddUser(user: User) {\n  let users = [];\n  if (localStorage.getItem('Users')) {\n    users = JSON.parse(localStorage.getItem('Users'));\n    users = [user, ...users];\n  } else {\n    users = [user];\n  }\n  localStorage.setItem('Users', JSON.stringify(users));\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private alertify: AlertifyService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogin(loginForm: NgForm) {\n    console.log(loginForm.value);\n    const token = this.authService.authUser(loginForm.value);\n    if (token) {\n      localStorage.setItem('token', token.userName);\n      this.alertify.success('Login Successful');\n      this.router.navigate(['/']);\n    } else {\n      this.alertify.error('User id or password is wrong');\n    }\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-6 m-auto\">\n    <div class=\"card m-auto\">\n      <div class=\"card-header\">\n        Login\n      </div>\n      <div class=\"card-body\">\n        <form #loginForm='ngForm' (ngSubmit)=\"onLogin(loginForm)\">\n          <div class=\"form-group col-12\">\n            <label>Name</label>\n            <input class=\"form-control\" required ngModel name=\"userName\">\n          </div>\n\n          <div class=\"form-group col-12\">\n            <label>Password</label>\n            <input class=\"form-control\" required type=\"password\" ngModel name=\"password\">\n          </div>\n\n          <div class=\"form-group col-12\">\n            <button [disabled]=\"!loginForm.valid\" type=\"submit\" class=\"btn btn-primary\">Login</button>\n            <button type=\"button\" class=\"btn btn-secondary ml-2\">Cancel</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/model/user';\nimport { AlertifyService } from 'src/app/services/alertify.service';\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n  registerationForm: FormGroup;\n  user: User;\n  userSubmitted: boolean;\n  constructor(private fb: FormBuilder,\n              private userService: UserService,\n              private alertify: AlertifyService ) { }\n\n  ngOnInit() {\n    // this.registerationForm = new FormGroup({\n    //   userName: new FormControl(null, Validators.required),\n    //   email: new FormControl(null, [Validators.required, Validators.email]),\n    //   password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\n    //   confirmPassword: new FormControl(null, [Validators.required]),\n    //   mobile: new FormControl(null, [Validators.required, Validators.maxLength(10)])\n    // }, this.passwordMatchingValidatior);\n    this.createRegisterationForm();\n    // this.registerationForm.controls['userName'].setValue('Default Value');\n  }\n\n  createRegisterationForm() {\n    this.registerationForm =  this.fb.group({\n      userName: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required, Validators.minLength(8)]],\n      confirmPassword: [null, Validators.required],\n      mobile: [null, [Validators.required, Validators.maxLength(10)]]\n    }, {validators: this.passwordMatchingValidatior});\n  }\n\n  passwordMatchingValidatior(fg: FormGroup): Validators {\n    return fg.get('password').value === fg.get('confirmPassword').value ? null :\n    {notmatched: true};\n  }\n\n\n  onSubmit() {\n    console.log(this.registerationForm.value);\n    this.userSubmitted = true;\n\n    if (this.registerationForm.valid) {\n      // this.user = Object.assign(this.user, this.registerationForm.value);\n      this.userService.addUser(this.userData());\n      this.onReset();\n      this.alertify.success('Congrats, you are successfully registered');\n  } else {\n      this.alertify.error('Kindly provide the required fields');\n  }\n  }\n\n  onReset() {\n    this.userSubmitted = false;\n    this.registerationForm.reset();\n  }\n\n\n  userData(): User {\n    return this.user = {\n      userName: this.userName.value,\n      email: this.email.value,\n      password: this.password.value,\n      mobile: this.mobile.value\n    }\n  }\n\n    // ------------------------------------\n  // Getter methods for all form controls\n  // ------------------------------------\n  get userName() {\n    return this.registerationForm.get('userName') as FormControl;\n  }\n\n  get email() {\n    return this.registerationForm.get('email') as FormControl;\n  }\n  get password() {\n    return this.registerationForm.get('password') as FormControl;\n  }\n  get confirmPassword() {\n    return this.registerationForm.get('confirmPassword') as FormControl;\n  }\n  get mobile() {\n    return this.registerationForm.get('mobile') as FormControl;\n  }\n  // ------------------------\n}\n","<div class=\"row\">\n  <div class=\"col-6 m-auto\">\n  <div class=\"card m-auto\">\n    <div class=\"card-header\">\n      Register\n    </div>\n    <div class=\"card-body\">\n      <form [formGroup]=\"registerationForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group col-12\">\n            <label for=\"name\" class=\"form-label\">Name</label>\n            <input type=\"text\" class=\"form-control\"\n            formControlName=\"userName\"\n            >\n            <span *ngIf=\"!userName.valid && (userName.touched || userSubmitted)\"\n            class=\"error-block\">\n              Please provide name\n            </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"email\" class=\"form-label\">Email</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"email\">\n          <span *ngIf=\"!email.valid && (email.touched || userSubmitted)\" class=\"error-block\">\n            <span *ngIf=\"email.hasError('required')\">\n                Please provide email id\n            </span>\n            <span *ngIf=\"email.hasError('email')\">\n              Please provide valid email id\n            </span>\n          </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"passwrod\" class=\"form-label\">Password</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n          <span *ngIf=\"!password.valid && (password.touched || userSubmitted)\" class=\"error-block\">\n            <span *ngIf=\"password.errors['required']\">\n              Please provide password\n            </span>\n            <span *ngIf=\"password.errors.minlength\">\n              Password should not be lesser than 8 character\n            </span>\n          </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"cpassword\" class=\"form-label\">Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\">\n          <span  *ngIf=\"!confirmPassword.valid && (confirmPassword.touched || userSubmitted)\" class=\"error-block\">\n            <span *ngIf=\"confirmPassword.hasError('required')\">\n              Please confirm password\n            </span>\n          </span>\n            <span *ngIf=\"registerationForm.hasError('notmatched') && confirmPassword.valid\" class=\"error-block\">\n              Password not matched\n            </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"mobile\" class=\"form-label\">Mobile</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"mobile\">\n          <span  *ngIf=\"!mobile.valid && (mobile.touched || userSubmitted)\" class=\"error-block\">\n              <span *ngIf=\"mobile.hasError('required')\">\n                Please provide mobile\n              </span>\n              <span *ngIf=\"mobile.hasError('maxlength')\" class=\"error-block\">\n                Invalid mobile number\n              </span>\n          </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n          <button type=\"button\" (click)=\"onReset()\" class=\"btn btn-secondary ml-2\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}