{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Pipes/filter.pipe.ts","webpack:///src/app/Pipes/sort.pipe.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/model/property.ts","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/property/add-property/add-property.component.ts","webpack:///src/app/property/add-property/add-property.component.html","webpack:///src/app/property/property-card/property-card.component.ts","webpack:///src/app/property/property-card/property-card.component.html","webpack:///src/app/property/property-detail/property-detail-resolver.service.ts","webpack:///src/app/property/property-detail/property-detail.component.ts","webpack:///src/app/property/property-detail/property-detail.component.html","webpack:///src/app/property/property-list/property-list.component.ts","webpack:///src/app/property/property-list/property-list.component.html","webpack:///src/app/services/alertify.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/housing.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/user/user-login/user-login.component.ts","webpack:///src/app/user/user-login/user-login.component.html","webpack:///src/app/user/user-register/user-register.component.ts","webpack:///src/app/user/user-register/user-register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","FilterPipe","value","filterString","propName","resultArray","length","item","push","name","SortPipe","args","sortField","sortDirection","multiplier","sort","a","b","AppComponent","selector","templateUrl","appRoutes","path","component","prp","AppModule","forRoot","declarations","imports","providers","bootstrap","Property","NavBarComponent","alertify","loggedinUser","localStorage","getItem","removeItem","success","styleUrls","AddPropertyComponent","fb","router","housingService","property","propertyTypes","furnishTypes","propertyView","Id","Name","Price","SellRent","PType","FType","BHK","BuiltArea","City","RTM","CreateAddPropertyForm","addPropertyForm","group","BasicInfo","required","PriceInfo","CarpetArea","Security","Maintenance","AddressInfo","FloorNo","TotalFloor","Address","LandMark","OtherInfo","PossessionOn","AOP","Gated","MainEntrance","Description","navigate","nextClicked","allTabsValid","mapProperty","addProperty","console","log","error","newPropID","Address2","Possession","PostedOn","Date","toString","invalid","formTabs","tabs","active","NextTabId","IsCurrentTabValid","controls","onSubmit","selectTab","PropertyCardComponent","PropertyDetailResolverService","route","state","propId","params","getProperty","pipe","providedIn","PropertyDetailComponent","propertyId","snapshot","data","subscribe","galleryOptions","width","height","thumbnailsColumns","imageAnimation","Slide","preview","galleryImages","small","medium","big","PropertyListComponent","Today","SearchCity","SortbyParam","SortDirection","url","getAllProperties","properties","onCityFilter","onCityFilterClear","onSortDirection","AlertifyService","message","AuthService","user","UserArray","JSON","parse","find","p","userName","password","HousingService","http","propertiesArray","get","localProperties","hasOwnProperty","newProp","setItem","stringify","String","UserService","users","UserLoginComponent","authService","loginForm","token","authUser","onLogin","UserRegisterComponent","userService","createRegisterationForm","registerationForm","email","minLength","confirmPassword","mobile","maxLength","validators","passwordMatchingValidatior","fg","notmatched","userSubmitted","valid","addUser","userData","onReset","reset","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any[], filterString: string, propName: string): any[] {\n\n    const resultArray = [];\n    if (value){\n    if (value.length === 0 || filterString === '' || propName === '') {\n      return value;\n    }\n\n    for (const item of value) {\n      if (item[propName] === filterString) {\n        resultArray.push(item);\n      }\n    }\n    return resultArray;\n  }\n}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value: Array<string>, args: any[]): any {\n    const sortField = args[0];\n    const sortDirection = args[1];\n    let multiplier = 1;\n\n    if (sortDirection === 'desc') {\n      multiplier = -1;\n    }\n\n    value.sort((a: any, b: any) => {\n      if (a[sortField] < b[sortField]) {\n        return -1 * multiplier;\n      } else if (a[sortField] > b[sortField]) {\n        return 1 * multiplier;\n      } else {\n        return 0;\n      }\n    }\n    );\n\n    return value;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\n\nexport class AppComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() { }\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\" style=\"margin-top: 70px;\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {Routes, RouterModule} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport {PropertyDetailResolverService} from './property/property-detail/property-detail-resolver.service';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\n\nimport { AppComponent } from './app.component';\nimport { PropertyCardComponent } from './property/property-card/property-card.component';\nimport { PropertyListComponent } from './property/property-list/property-list.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { HousingService } from './services/housing.service';\nimport { AddPropertyComponent } from './property/add-property/add-property.component';\nimport { PropertyDetailComponent } from './property/property-detail/property-detail.component';\nimport { UserRegisterComponent } from './user/user-register/user-register.component';\nimport { UserLoginComponent } from './user/user-login/user-login.component';\nimport { UserService } from './services/user.service';\nimport { AlertifyService } from './services/alertify.service';\nimport { AuthService } from './services/auth.service';\nimport { FilterPipe } from './Pipes/filter.pipe';\nimport { SortPipe } from './Pipes/sort.pipe';\n\nconst appRoutes: Routes = [\n  {path: '', component: PropertyListComponent},\n  {path: 'rent-property', component: PropertyListComponent},\n  {path: 'add-property', component: AddPropertyComponent},\n  {path: 'property-detail/:id',\n          component: PropertyDetailComponent,\n          resolve: {prp: PropertyDetailResolverService}},\n  {path: 'user/login', component: UserLoginComponent},\n  {path: 'user/register', component: UserRegisterComponent},\n  {path: '**', component: PropertyListComponent}\n]\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      PropertyCardComponent,\n      PropertyListComponent,\n      NavBarComponent,\n      AddPropertyComponent,\n      PropertyDetailComponent,\n      UserRegisterComponent,\n      UserLoginComponent,\n      FilterPipe,\n      SortPipe\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      RouterModule.forRoot(appRoutes),\n      BrowserAnimationsModule,\n      BsDropdownModule.forRoot(),\n      TabsModule.forRoot(),\n      ButtonsModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      NgxGalleryModule\n   ],\n   providers: [\n     HousingService,\n     UserService,\n     AlertifyService,\n     AuthService,\n     PropertyDetailResolverService\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { IPropertyBase } from './ipropertybase';\n\nexport class Property implements IPropertyBase {\n  Id: number;\n  SellRent: number;\n  Name: string;\n  PType: string;\n  BHK: number;\n  FType: string;\n  Price: number;\n  BuiltArea: number;\n  CarpetArea?: number;\n  Address: string;\n  Address2?: string;\n  City: string;\n  FloorNo?: string;\n  TotalFloor?: string;\n  RTM: number;\n  AOP?: string;\n  MainEntrance?: string;\n  Security?: number;\n  Gated?: number;\n  Maintenance?: number;\n  Possession?: string;\n  Image?: string;\n  Description?: string;\n  PostedOn: string;\n  PostedBy: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  loggedinUser: string;\n  constructor(private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  loggedin() {\n    this.loggedinUser = localStorage.getItem('token');\n    return this.loggedinUser;\n  }\n\n  onLogout() {\n    localStorage.removeItem('token');\n    this.alertify.success(\"You are logged out !\");\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n  <a class=\"navbar-brand\" href=\"/\">HSPA</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLinkActiveOptions]=\"{exact:true}\" routerLinkActive=\"active\" routerLink=\"/\">Buy <span class=\"sr-only\">(current)</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/rent-property\">Rent</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\"  routerLink=\"/add-property\">List Property (Free)</a>\n      </li>\n    </ul>\n\n    <div>\n      <ul class=\"nav navbar-nav\">\n        <li *ngIf=\"!loggedin()\" class=\"nav-item\">\n          <a class=\"nav-link\"\n          routerLink=\"user/register\"\n          routerLinkActive=\"active\"\n          >Register</a>\n        </li>\n        <li *ngIf=\"!loggedin()\" class=\"nav-item\">\n          <a class=\"nav-link\"\n          routerLink=\"user/login\"\n          routerLinkActive=\"active\"\n          >Login</a>\n        </li>\n        <!-- <li *ngIf=\"loggedin()\" class=\"nav-item\">\n          <a class=\"nav-link\" (click)=\"onLogout()\"\n          >Logout</a>\n        </li> -->\n        <div *ngIf=\"loggedin()\" class=\"dropdown mr-5\" dropdown>\n          <a href=\"#\" class=\"dropdown-toggle text-light\" dropdownToggle (click)=\"false\">\n              Welcome {{loggedinUser}}\n          </a>\n          <div class=\"dropdown-menu\" *dropdownMenu>\n              <a href=\"#\"class=\"dropdown-item\">\n                <i class=\"fas fa-tachometer-alt\"></i> View Dashboard</a>\n              <a href=\"#\" class=\"dropdown-item\">\n                <i class=\"far fa-user-circle\"></i> My Profile</a>\n              <a href=\"#\" class=\"dropdown-item\">\n                <i class=\"fas fa-key\"></i> Change Password</a>\n              <a (click)='onLogout()' class=\"dropdown-item\">\n                <i class=\"fas fa-sign-out-alt\"></i> Logout</a>\n          </div>\n        </div>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs/public_api';\nimport { IPropertyBase } from 'src/app/model/ipropertybase';\nimport { Property } from 'src/app/model/property';\nimport { HousingService } from 'src/app/services/housing.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\n\n\n@Component({\n  selector: 'app-add-property',\n  templateUrl: './add-property.component.html',\n  styleUrls: ['./add-property.component.css']\n})\nexport class AddPropertyComponent implements OnInit {\n  // @ViewChild('Form') addPropertyForm: NgForm;\n  @ViewChild('formTabs') formTabs: TabsetComponent;\n  addPropertyForm: FormGroup;\n  nextClicked: boolean;\n  property = new Property();\n\n  // Will come from masters\n  propertyTypes: Array<string> = ['House', 'Apartment', 'Duplex']\n  furnishTypes: Array<string> = ['Fully', 'Semi', 'Unfurnished']\n\n  propertyView: IPropertyBase = {\n    Id: null,\n    Name: '',\n    Price: null,\n    SellRent: null,\n    PType: null,\n    FType: null,\n    BHK: null,\n    BuiltArea: null,\n    City: null,\n    RTM: null\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private housingService: HousingService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.CreateAddPropertyForm();\n  }\n\n  CreateAddPropertyForm() {\n    this.addPropertyForm = this.fb.group({\n      BasicInfo: this.fb.group({\n        SellRent: ['1' , Validators.required],\n        BHK: [null, Validators.required],\n        PType: [null, Validators.required],\n        FType: [null, Validators.required],\n        Name: [null, Validators.required],\n        City: [null, Validators.required]\n      }),\n\n      PriceInfo: this.fb.group({\n        Price: [null, Validators.required],\n        BuiltArea: [null, Validators.required],\n        CarpetArea: [null],\n        Security: [null],\n        Maintenance: [null],\n      }),\n\n      AddressInfo: this.fb.group({\n        FloorNo: [null],\n        TotalFloor: [null],\n        Address: [null, Validators.required],\n        LandMark: [null],\n      }),\n\n      OtherInfo: this.fb.group({\n        RTM: [null, Validators.required],\n        PossessionOn: [null],\n        AOP: [null],\n        Gated: [null],\n        MainEntrance: [null],\n        Description: [null]\n      })\n      });\n  }\n\n//#region <Getter Methods>\n  // #region <FormGroups>\n      get BasicInfo() {\n        return this.addPropertyForm.controls.BasicInfo as FormGroup;\n      }\n\n      get PriceInfo() {\n        return this.addPropertyForm.controls.PriceInfo as FormGroup;\n      }\n\n      get AddressInfo() {\n        return this.addPropertyForm.controls.AddressInfo as FormGroup;\n      }\n\n      get OtherInfo() {\n        return this.addPropertyForm.controls.OtherInfo as FormGroup;\n      }\n  // #endregion\n\n  //#region <Form Controls>\n      get SellRent() {\n        return this.BasicInfo.controls.SellRent as FormControl;\n      }\n\n      get BHK() {\n        return this.BasicInfo.controls.BHK as FormControl;\n      }\n\n      get PType() {\n        return this.BasicInfo.controls.PType as FormControl;\n      }\n\n      get FType() {\n        return this.BasicInfo.controls.FType as FormControl;\n      }\n\n      get Name() {\n        return this.BasicInfo.controls.Name as FormControl;\n      }\n\n      get City() {\n        return this.BasicInfo.controls.City as FormControl;\n      }\n\n      get Price() {\n        return this.PriceInfo.controls.Price as FormControl;\n      }\n\n      get BuiltArea() {\n        return this.PriceInfo.controls.BuiltArea as FormControl;\n      }\n\n      get CarpetArea() {\n        return this.PriceInfo.controls.CarpetArea as FormControl;\n      }\n\n      get Security() {\n        return this.PriceInfo.controls.Security as FormControl;\n      }\n\n      get Maintenance() {\n        return this.PriceInfo.controls.Maintenance as FormControl;\n      }\n\n      get FloorNo() {\n        return this.AddressInfo.controls.FloorNo as FormControl;\n      }\n\n      get TotalFloor() {\n        return this.AddressInfo.controls.TotalFloor as FormControl;\n      }\n\n      get Address() {\n        return this.AddressInfo.controls.Address as FormControl;\n      }\n\n      get LandMark() {\n        return this.AddressInfo.controls.LandMark as FormControl;\n      }\n\n      get RTM() {\n        return this.OtherInfo.controls.RTM as FormControl;\n      }\n\n      get PossessionOn() {\n        return this.OtherInfo.controls.PossessionOn as FormControl;\n      }\n\n      get AOP() {\n        return this.OtherInfo.controls.AOP as FormControl;\n      }\n\n      get Gated() {\n        return this.OtherInfo.controls.Gated as FormControl;\n      }\n\n      get MainEntrance() {\n        return this.OtherInfo.controls.MainEntrance as FormControl;\n      }\n\n      get Description() {\n        return this.OtherInfo.controls.Description as FormControl;\n      }\n\n  //#endregion\n//#endregion\n\n  onBack() {\n    this.router.navigate(['/']);\n  }\n\n  onSubmit() {\n    this.nextClicked = true;\n    if (this.allTabsValid()) {\n      this.mapProperty();\n      this.housingService.addProperty(this.property);\n      this.alertify.success('Congrats, your property listed successfully on our website');\n      console.log(this.addPropertyForm);\n\n      if(this.SellRent.value === '2') {\n        this.router.navigate(['/rent-property']);\n      } else {\n        this.router.navigate(['/']);\n      }\n\n\n    } else {\n      this.alertify.error('Please review the form and provide all valid entries');\n    }\n  }\n\n  mapProperty(): void {\n    this.property.Id = this.housingService.newPropID();\n    this.property.SellRent = +this.SellRent.value;\n    this.property.BHK = this.BHK.value;\n    this.property.PType = this.PType.value;\n    this.property.Name = this.Name.value;\n    this.property.City = this.City.value;\n    this.property.FType = this.FType.value;\n    this.property.Price = this.Price.value;\n    this.property.Security = this.Security.value;\n    this.property.Maintenance = this.Maintenance.value;\n    this.property.BuiltArea = this.BuiltArea.value;\n    this.property.CarpetArea = this.CarpetArea.value;\n    this.property.FloorNo = this.FloorNo.value;\n    this.property.TotalFloor = this.TotalFloor.value;\n    this.property.Address = this.Address.value;\n    this.property.Address2 = this.LandMark.value;\n    this.property.RTM = this.RTM.value;\n    this.property.AOP = this.AOP.value;\n    this.property.Gated = this.Gated.value;\n    this.property.MainEntrance = this.MainEntrance.value;\n    this.property.Possession = this.PossessionOn.value;\n    this.property.Description = this.Description.value;\n    this.property.PostedOn = new Date().toString();\n  }\n\n  allTabsValid(): boolean {\n    if (this.BasicInfo.invalid) {\n      this.formTabs.tabs[0].active = true;\n      return false;\n    }\n\n    if (this.PriceInfo.invalid) {\n      this.formTabs.tabs[1].active = true;\n      return false;\n    }\n\n    if (this.AddressInfo.invalid) {\n      this.formTabs.tabs[2].active = true;\n      return false;\n    }\n\n    if (this.OtherInfo.invalid) {\n      this.formTabs.tabs[3].active = true;\n      return false;\n    }\n    return true;\n  }\n\n  selectTab(NextTabId: number, IsCurrentTabValid: boolean) {\n    this.nextClicked = true;\n    if (IsCurrentTabValid) {\n      this.formTabs.tabs[NextTabId].active = true;\n    }\n  }\n\n}\n","<div class=\"row mb-5\">\n  <div class=\"col-8 shadow-lg p-0 bg-white\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h3>List your Property</h3>\n      </div>\n      <div class=\"card-body\">\n        <form (ngSubmit)='onSubmit()' [formGroup]=\"addPropertyForm\">\n          <div class=\"tab-panel\">\n            <tabset class=\"member-tabset\" #formTabs>\n              <tab heading=\"Basic Info\" formGroupName=\"BasicInfo\" >\n                <div class=\"form-group col-12\">\n                <p>I want to</p>\n                  <div class=\"btn-group\"\n                  btnRadioGroup\n                  formControlName=\"SellRent\">\n                    <label class=\"btn btn-outline-primary mr-2\"\n                    btnRadio=1 tabindex=\"0\" role=\"button\" name=\"SellRent\">Sell</label>\n                    <label class=\"btn btn-outline-primary\"\n                    btnRadio=2  tabindex=\"0\" role=\"button\" name=\"SellRent\">Rent</label>\n                  </div>\n                  <div class=\"error-block\" *ngIf=\"SellRent.invalid && nextClicked\">\n                    Please select sell or rent\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <p>BHK</p>\n                  <div class=\"btn-group\" btnRadioGroup\n                  formControlName=\"BHK\"\n                  [(ngModel)]=\"propertyView.BHK\" name=\"BHK\">\n                    <label\n                      *ngFor=\"let bhk of [1,2,3,4]\"\n                      class=\"btn btn-outline-primary mr-2\"\n                      [btnRadio]=\"bhk\" tabindex=\"0\" role=\"button\"\n                      name=\"BHK\">\n                      {{bhk}}\n                    </label>\n                  </div>\n                  <div class=\"error-block\" *ngIf=\"BHK.invalid && nextClicked\">\n                    Please select BHK\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <p>Property Type</p>\n                  <div class=\"btn-group\" btnRadioGroup\n                  formControlName='PType'\n                  [(ngModel)]=\"propertyView.PType\">\n                    <label\n                    *ngFor=\"let ptype of propertyTypes\"\n                    class=\"btn btn-outline-primary mr-2\"\n                    [btnRadio]=\"ptype\" tabindex=\"0\" role=\"button\"\n                    name=\"PropType\">{{ptype}}\n                  </label>\n                  </div>\n                  <div class=\"error-block\" *ngIf=\"PType.invalid && nextClicked\">\n                    Please select property type\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <p>Furnishing Type</p>\n                  <div class=\"btn-group\" btnRadioGroup\n                  formControlName=\"FType\"\n                  [(ngModel)]=\"propertyView.FType\">\n                  <label\n                    *ngFor=\"let ftype of furnishTypes\"\n                    class=\"btn btn-outline-primary mr-2\"\n                    [btnRadio]=\"ftype\" tabindex=\"0\" role=\"button\"\n                    name=\"FurnishType\">\n                    {{ftype}}\n                  </label>\n                  </div>\n                  <div class=\"error-block\" *ngIf=\"FType.invalid && nextClicked\">\n                    Please select furnishing type\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>in Building/Society/Project</label>\n                  <input type=\"text\" class=\"form-control\"\n                  ngModel\n                  formControlName=\"Name\"\n                  [(ngModel)]=\"propertyView.Name\">\n                  <div class=\"error-block\"\n                  *ngIf=\"Name.invalid && (nextClicked || Name.touched)\">\n                    Please select building, society or project name\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>City</label>\n                  <input type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"City\"\n                  [(ngModel)]=\"propertyView.City\">\n                  <div class=\"error-block\"\n                  *ngIf=\"City.invalid && (nextClicked || City.touched)\">\n                    Please select city\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                    <button type=\"button\"\n                    class=\"btn btn-primary btn-block\"\n                    (click)=\"selectTab(1, BasicInfo.valid)\">Next</button>\n                </div>\n              </tab>\n\n              <tab heading=\"Pricing and Area\" formGroupName=\"PriceInfo\">\n                  <div class=\"form-group col-12\">\n                    <label *ngIf=\"SellRent.value==1\">Price (in USD)</label>\n                    <label *ngIf=\"SellRent.value==2\">Rent (in USD)</label>\n                    <input type=\"text\" class=\"form-control\"\n                    formControlName=\"Price\"\n                    [(ngModel)]=\"propertyView.Price\">\n                    <div class=\"error-block\"\n                    *ngIf=\"Price.invalid && (nextClicked || Price.touched)\">\n                      Please select\n                      <span *ngIf=\"SellRent.value==1;else ShowRent\">price</span>\n                      <ng-template #ShowRent>rent</ng-template>\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"SellRent.value==2\">\n                    <div class=\"form-group col-12\">\n                      <label>Security (in USD)</label>\n                      <input type=\"text\"\n                      formControlName=\"Security\"\n                      class=\"form-control\">\n                    </div>\n\n                    <div class=\"form-group col-12\">\n                      <label>Maintenance (in USD)</label>\n                      <input type=\"text\"\n                      formControlName=\"Maintenance\"\n                      class=\"form-control\">\n                    </div>\n                  </div>\n\n                  <div class=\"form-group col-12\">\n                    <label>Built Area (in Sqr Feet)</label>\n                    <input type=\"text\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"propertyView.BuiltArea\"\n                    formControlName=\"BuiltArea\">\n                    <div class=\"error-block\"\n                    *ngIf=\"BuiltArea.invalid && nextClicked\">\n                      Please select built up area\n                    </div>\n                  </div>\n\n                  <div class=\"form-group col-12\">\n                    <label>Carpet Area (in Sqr Feet)</label>\n                    <input type=\"text\"\n                    formControlName=\"CarpetArea\"\n                    class=\"form-control\">\n                  </div>\n\n                  <div class=\"form-group col-12\">\n                    <button type=\"button\" class=\"btn btn-primary btn-block\"\n                    (click)=\"selectTab(2, PriceInfo.valid)\">Next</button>\n\n                    <button type=\"button\" class=\"btn btn-primary btn-block\"\n                    (click)=\"selectTab(0, PriceInfo.valid)\">Back</button>\n                  </div>\n              </tab>\n\n              <tab heading=\"Address\" formGroupName=\"AddressInfo\">\n\n                <div class=\"form-group col-12\">\n                  <label>Floor</label>\n                  <input type=\"text\"\n                  formControlName=\"FloorNo\"\n                  class=\"form-control\">\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>Total Floor</label>\n                  <input type=\"text\"\n                  formControlName=\"TotalFloor\"\n                  class=\"form-control\">\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>Address</label>\n                  <input type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"Address\">\n                  <div class=\"error-block\"\n                  *ngIf=\"Address.invalid && (nextClicked || Address.touched)\">\n                    Please select address\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>Landmark</label>\n                  <input type=\"text\"\n                  formControlName=\"LandMark\"\n                  class=\"form-control\">\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <button type=\"button\" class=\"btn btn-primary btn-block\"\n                  (click)=\"selectTab(3, AddressInfo.valid)\">Next</button>\n\n                  <button type=\"button\" class=\"btn btn-primary btn-block\"\n                  (click)=\"selectTab(1, AddressInfo.valid)\">Back</button>\n                </div>\n              </tab>\n\n              <tab heading=\"Other Details\" formGroupName=\"OtherInfo\">\n                <div class=\"form-group col-12\">\n                  <p>Ready to Move</p>\n                  <div class=\"btn-group\" btnRadioGroup\n                  formControlName=\"RTM\">\n                    <label class=\"btn btn-outline-primary mr-2\"\n                      btnRadio=1 tabindex=\"0\" role=\"button\"\n                      name=\"RTM\">Yes\n                    </label>\n                    <label class=\"btn btn-outline-primary\"\n                      btnRadio=2  tabindex=\"0\" role=\"button\" name=\"RTM\">No\n                    </label>\n                  </div>\n                  <div class=\"error-block\" *ngIf=\"RTM.invalid && nextClicked\">\n                    Please select ready to move\n                  </div>\n                </div>\n\n\n                <div\n                *ngIf=\"RTM.value==2\"\n                class=\"form-group col-6\">\n                  <label>Possession/Avaialble From</label>\n                  <input type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"PossessionOn\"\n                  bsDatepicker\n                  [bsConfig]=\"{containerClass: 'theme-dark-blue',\n                  dateInputFormat: 'DD-MM-YYYY'}\">\n                </div>\n\n                <div\n                *ngIf=\"RTM.value==1\"\n                class=\"form-group col-3\">\n                  <label>Age of Property</label>\n                  <input type=\"text\"\n                  formControlName=\"AOP\"\n                  class=\"form-control\">\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <p>Gated Community</p>\n                  <div class=\"btn-group\"\n                  btnRadioGroup\n                  formControlName=\"Gated\">\n                    <label class=\"btn btn-outline-primary mr-2\"\n                    btnRadio=1 tabindex=\"0\" role=\"button\" name=\"Gated\">Yes</label>\n                    <label class=\"btn btn-outline-primary\"\n                    btnRadio=2  tabindex=\"0\" role=\"button\" name=\"Gated\">No</label>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <p>Main Entrance</p>\n                  <div class=\"btn-group\" btnRadioGroup\n                  formControlName=\"MainEntrance\">\n                    <label class=\"btn btn-outline-primary mr-2\"\n                    btnRadio=1 tabindex=\"0\" role=\"button\" name=\"Entrance\">East</label>\n                    <label class=\"btn btn-outline-primary\"\n                    btnRadio=2  tabindex=\"0\" role=\"button\" name=\"Entrance\">West</label>\n                    <label class=\"btn btn-outline-primary\"\n                    btnRadio=3  tabindex=\"0\" role=\"button\" name=\"Entrance\">South</label>\n                    <label class=\"btn btn-outline-primary\"\n                    btnRadio=4  tabindex=\"0\" role=\"button\" name=\"Entrance\">North</label>\n                  </div>\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>Description</label>\n                  <textarea type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"Description\"\n                  rows=\"6\"></textarea>\n                </div>\n\n                <div class=\"form-group col-12\">\n                    <button type=\"button\" class=\"btn btn-primary btn-block\"\n                    (click)=\"selectTab(4, OtherInfo.valid)\">Next</button>\n\n                    <button type=\"button\" class=\"btn btn-primary btn-block\"\n                    (click)=\"selectTab(2, OtherInfo.valid)\">Back</button>\n                </div>\n              </tab>\n\n              <tab heading=\"Photos\">\n                <div class=\"form-group col-12\">\n                  <div class=\"photo-control\">\n                      <button class=\"mt-5\" type=\"button\">Upload</button> <br>\n                      This is under construction\n                  </div>\n                </div>\n                <div class=\"form-group col-12\">\n                  <button type=\"button\" class=\"btn btn-primary btn-block\"\n                  (click)=\"selectTab(3, true)\">Back</button>\n                  <button type=\"submit\" class=\"btn btn-primary btn-block\">Save</button>\n                  <button type=\"reset\" class=\"btn btn-primary btn-block\">Cancel</button>\n                </div>\n              </tab>\n            </tabset>\n          </div>\n        </form>\n      </div>\n  </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card-header\">\n      <h3>Your Property Preview</h3>\n    </div>\n    <div class=\"shadow-lg p-3 bg-white\">\n      <app-property-card [property]=\"propertyView\" hideIcons=\"true\"></app-property-card>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { IPropertyBase } from 'src/app/model/ipropertybase';\n\n\n@Component({\n  selector: 'app-property-card',\n  // template: `<h1>I am a card</h1>`,\n  templateUrl: 'property-card.component.html',\n  // styles: ['h1 {font-weight: normal;}']\n  styleUrls: ['property-card.component.css']\n}\n\n)\nexport class PropertyCardComponent {\n@Input() property: IPropertyBase;\n@Input() hideIcons: boolean;\n\n}\n","<div class=\"card\">\n  <div class=\"card-img-wrapper\">\n    <img *ngIf=\"property.Image\" class=\"card-img-top\" src=\"assets/images/{{property.Image}}.png\">\n    <img *ngIf=\"!property.Image\" class=\"card-img-top\" src=\"assets/images/house_default.png\">\n    <ul *ngIf=\"!hideIcons\" class=\"list-inline text-center member-icons animate\">\n      <li class=\"list-inline-item\">\n        <button class=\"btn btn-primary\" routerLink=\"/property-detail/{{property.Id}}\"><i class=\"far fa-edit\"></i></button>\n      </li>\n      <li class=\"list-inline-item\">\n        <button class=\"btn btn-primary\"><i class=\"far fa-address-book\"></i></button>\n      </li>\n    </ul>\n\n  </div>\n  <div class=\"card-body p-1\">\n    <h1 class=\"mb-0\"> {{property.BHK}} BHK {{property.PType}} </h1>\n\n    in {{property.Name}}\n    <span *ngIf=\"property.Name\">,</span>\n    {{property.City}}\n\n    <h6  class=\"mt-2\">{{property.FType}}\n    <span *ngIf=\"property.FType !== 'Unfurnished'\">Furnished</span> | Ready to Move</h6>\n\n    <hr class=\"mt-0 mb-2\">\n\n    <h6 class=\"mb-0\">Price: <span class=\"font-highlight\">{{property.Price}} USD.</span> |\n      Area:  <span class=\"font-highlight\">{{property.BuiltArea}} Sq Ft </span> </h6>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { Property } from 'src/app/model/property';\nimport { Observable, of } from 'rxjs';\nimport { HousingService } from 'src/app/services/housing.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropertyDetailResolverService implements Resolve<Property> {\n\nconstructor(private router: Router,  private housingService: HousingService) { }\n\nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n  Observable<Property>|Property {\n    const propId = route.params['id'];\n    return this.housingService.getProperty(+propId).pipe(\n      catchError(error => {\n        this.router.navigate(['/']);\n        return of(null);\n      })\n    );\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HousingService } from 'src/app/services/housing.service';\nimport { Property } from 'src/app/model/property';\nimport {NgxGalleryOptions} from '@kolkov/ngx-gallery';\nimport {NgxGalleryImage} from '@kolkov/ngx-gallery';\nimport {NgxGalleryAnimation} from '@kolkov/ngx-gallery';\n\n@Component({\n  selector: 'app-property-detail',\n  templateUrl: './property-detail.component.html',\n  styleUrls: ['./property-detail.component.css']\n})\nexport class PropertyDetailComponent implements OnInit {\npublic propertyId: number;\nproperty = new Property();\ngalleryOptions: NgxGalleryOptions[];\ngalleryImages: NgxGalleryImage[];\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private housingService: HousingService) { }\n\n  ngOnInit() {\n    this.propertyId = +this.route.snapshot.params['id'];\n    this.route.data.subscribe(\n      (data: Property) => {\n        this.property = data['prp'];\n      }\n    );\n\n    // this.route.params.subscribe(\n    //   (params) => {\n    //     this.propertyId = +params['id'];\n    //     this.housingService.getProperty(this.propertyId).subscribe(\n    //       (data: Property) => {\n    //         this.property = data;\n    //       }, error => this.router.navigate(['/'])\n    //     );\n    //   }\n    // );\n\n    this.galleryOptions = [\n      {\n        width: '100%',\n        height: '465px',\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: true\n      }\n    ];\n\n    this.galleryImages = [\n      {\n        small: 'assets/images/internal-1.jpg',\n        medium: 'assets/images/internal-1.jpg',\n        big: 'assets/images/internal-1.jpg'\n      },\n      {\n        small: 'assets/images/internal-2.jpg',\n        medium: 'assets/images/internal-2.jpg',\n        big: 'assets/images/internal-2.jpg'\n      },\n      {\n        small: 'assets/images/internal-3.jpg',\n        medium: 'assets/images/internal-3.jpg',\n        big: 'assets/images/internal-3.jpg'\n      },\n      {\n        small: 'assets/images/internal-4.jpg',\n        medium: 'assets/images/internal-4.jpg',\n        big: 'assets/images/internal-4.jpg'\n      },\n      {\n        small: 'assets/images/internal-5.jpg',\n        medium: 'assets/images/internal-5.jpg',\n        big: 'assets/images/internal-5.jpg'\n      }\n    ];\n\n\n  }\n}\n","<div class=\"row shadow\">\n  <div class=\"col-sm-4 p-0\">\n    <div class=\"card\">\n      <div class=\"card-img-wrapper\">\n        <img *ngIf=\"property.Image\" class=\"card-img-top\" src=\"assets/images/{{property.Image}}.png\">\n        <img *ngIf=\"!property.Image\" class=\"card-img-top\" src=\"assets/images/house_default.png\">\n      </div>\n      <div class=\"card-body\">\n        <h1 class=\"card-title\">{{property.Name}}</h1>\n        <div>\n            <strong>{{property.BHK}} BHK {{property.PType}} @ ${{property.Price}}</strong>\n        </div>\n        <div>\n           <strong>in {{property.City}}</strong>\n        </div> <hr>\n        <div>\n            <strong>Build Area: </strong>\n            {{property.BuiltArea}} Sqft\n        </div>\n\n        <div>\n            <strong>Carpet Area: </strong>\n            {{property.CarpetArea}} Sqft\n        </div>\n        <div>\n            <strong>Furnishing Type: </strong>\n            {{property.FType}}\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group d-flex\">\n          <button class=\"btn btn-primary\">Like</button>\n          <button class=\"btn btn-success\">Message</button>\n        </div>\n      </div>\n  </div>\n  </div>\n  <div class=\"col-sm-8 p-0\">\n    <div class=\"tab-panel p-3\">\n      <tabset class=\"member-tabset\">\n        <tab heading=\"Overview\">\n          <h1>Overview</h1>\n          <div class=\"row\">\n              <div class=\"col-sm-6\">\n                  <div class=\"heading\">\n                      <strong>Project Name</strong>\n                      <p>{{property.Name}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Floor Number</strong>\n                      <p>{{property.FloorNo}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Age of Property</strong>\n                      <p>{{property.AOP}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Posession</strong>\n                      <p>{{property.Possession}}</p>\n                  </div>\n              </div>\n\n              <div class=\"col-sm-6\">\n                  <div class=\"heading\">\n                      <strong>Main Entrance</strong>\n                      <p>{{property.MainEntrance}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Gated Community</strong>\n                      <p>{{property.Gated}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Security Deposit</strong>\n                      <p>{{property.Security}}</p>\n                  </div>\n                  <div class=\"heading\">\n                      <strong>Maintenance</strong>\n                      <p>{{property.Maintenance}}</p>\n                  </div>\n              </div>\n              <div class=\"col-sm-12\">\n                  <div class=\"heading\">\n                      <strong>About Property</strong>\n                      <p>{{property.Description}}</p>\n                  </div>\n              </div>\n            </div>\n        </tab>\n        <tab heading=\"Address\">\n          <div class=\"col-sm-12\">\n            <h1>Address</h1>\n            <div class=\"heading\">\n                <strong>{{property.Address}}</strong><br/>\n                <strong>{{property.Address2}}</strong><br/>\n                <strong>{{property.City}}</strong>\n            </div>\n        </div>\n\n        </tab>\n        <tab heading=\"Photos\">\n          <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"></ngx-gallery>\n        </tab>\n        <tab heading=\"Contact\">\n          <h1>Contact Detail</h1>\n          This should be restricted area and only registered user should be able to see seller contact details\n        </tab>\n      </tabset>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HousingService } from 'src/app/services/housing.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { IPropertyBase } from 'src/app/model/ipropertybase';\n\n@Component({\n  selector: 'app-property-list',\n  templateUrl: './property-list.component.html',\n  styleUrls: ['./property-list.component.css']\n})\nexport class PropertyListComponent implements OnInit {\n  SellRent = 1;\n  properties: IPropertyBase[];\n  Today = new Date();\n  City = '';\n  SearchCity = '';\n  SortbyParam = '';\n  SortDirection = 'asc';\n\n  constructor(private route: ActivatedRoute, private housingService: HousingService) { }\n\n  ngOnInit(): void {\n    if (this.route.snapshot.url.toString()) {\n      this.SellRent = 2; // Means we are on rent-property URL else we are on base URL\n    }\n    this.housingService.getAllProperties(this.SellRent).subscribe(\n        data => {\n        this.properties = data;\n        console.log(data);\n      }, error => {\n        console.log('httperror:');\n        console.log(error);\n      }\n    );\n  }\n\n  onCityFilter() {\n    this.SearchCity = this.City;\n  }\n\n  onCityFilterClear() {\n    this.SearchCity = '';\n    this.City = '';\n  }\n\n  onSortDirection() {\n    if (this.SortDirection === 'desc') {\n      this.SortDirection = 'asc';\n    } else {\n      this.SortDirection = 'desc';\n    }\n  }\n\n}\n","<label>Filter City: &nbsp; </label>\n<input [(ngModel)]='City'>\n<button type=\"button\" (click)=\"onCityFilter()\">Search</button>\n<button type=\"button\" (click)=\"onCityFilterClear()\">Clear</button> &nbsp;\n\n<label>Sort by &nbsp;</label>\n<select [(ngModel)] = 'SortbyParam'>\n  <option value=\"City\">City</option>\n  <option value=\"Price\">Price</option>\n</select>\n<button type=\"button\" (click) = \"onSortDirection()\">\n  <i *ngIf=\"SortDirection==='asc'\" class=\"fas fa-sort-alpha-down\"></i>\n  <i *ngIf=\"SortDirection==='desc'\" class=\"fas fa-sort-alpha-up\"></i>\n</button>\n\n<div class=\"row\">\n  <div *ngFor=\"let property of properties|filter:SearchCity:'City'|sort:[SortbyParam,SortDirection]\"\n  class=\"col-sm-4\">\n    <div class=\"shadow-lg p-3 mb-4\">\n        <app-property-card [property]=\"property\"></app-property-card>\n    </div>\n</div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport * as alertyfy from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\nsuccess(message: string) {\n  alertyfy.success(message);\n}\n\nwarning(message: string) {\n  alertyfy.warning(message);\n}\n\nerror(message: string) {\n  alertyfy.error(message);\n}\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\nconstructor() { }\n\nauthUser(user: any) {\n  let UserArray = [];\n  if (localStorage.getItem('Users')) {\n    UserArray = JSON.parse(localStorage.getItem('Users'));\n  }\n  return UserArray.find(p => p.userName === user.userName && p.password === user.password);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { IProperty } from '../model/iproperty';\nimport { IPropertyBase } from '../model/ipropertybase';\nimport { Property } from '../model/property';\nimport { error } from '@angular/compiler/src/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HousingService {\n\n  constructor(private http: HttpClient) { }\n\n  getProperty(id: number) {\n    return this.getAllProperties().pipe(\n      map(propertiesArray => {\n        // throw new Error('Some error');\n        return propertiesArray.find(p => p.Id === id);\n      })\n    );\n  }\n\n  getAllProperties(SellRent?: number): Observable<Property[]> {\n    return this.http.get('data/properties.json').pipe(\n      map(data => {\n      const propertiesArray: Array<Property> = [];\n      const localProperties = JSON.parse(localStorage.getItem('newProp'));\n\n      if (localProperties) {\n        for (const id in localProperties) {\n          if (SellRent) {\n          if (localProperties.hasOwnProperty(id) && localProperties[id].SellRent === SellRent) {\n            propertiesArray.push(localProperties[id]);\n          }\n        } else {\n          propertiesArray.push(localProperties[id]);\n        }\n        }\n      }\n\n      for (const id in data) {\n        if (SellRent) {\n          if (data.hasOwnProperty(id) && data[id].SellRent === SellRent) {\n            propertiesArray.push(data[id]);\n          }\n          } else {\n            propertiesArray.push(data[id]);\n        }\n      }\n      return propertiesArray;\n      })\n    );\n\n    return this.http.get<Property[]>('data/properties.json');\n  }\n  addProperty(property: Property) {\n    let newProp = [property];\n\n    // Add new property in array if newProp alreay exists in local storage\n    if (localStorage.getItem('newProp')) {\n      newProp = [property,\n                  ...JSON.parse(localStorage.getItem('newProp'))];\n    }\n\n    localStorage.setItem('newProp', JSON.stringify(newProp));\n  }\n\n  newPropID() {\n    if (localStorage.getItem('PID')) {\n      localStorage.setItem('PID', String(+localStorage.getItem('PID') + 1));\n      return +localStorage.getItem('PID');\n    } else {\n      localStorage.setItem('PID', '101');\n      return 101;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\nconstructor() { }\n\naddUser(user: User) {\n  let users = [];\n  if (localStorage.getItem('Users')) {\n    users = JSON.parse(localStorage.getItem('Users'));\n    users = [user, ...users];\n  } else {\n    users = [user];\n  }\n  localStorage.setItem('Users', JSON.stringify(users));\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private alertify: AlertifyService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogin(loginForm: NgForm) {\n    console.log(loginForm.value);\n    const token = this.authService.authUser(loginForm.value);\n    if (token) {\n      localStorage.setItem('token', token.userName);\n      this.alertify.success('Login Successful');\n      this.router.navigate(['/']);\n    } else {\n      this.alertify.error('User id or password is wrong');\n    }\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-6 m-auto\">\n    <div class=\"card m-auto\">\n      <div class=\"card-header\">\n        Login\n      </div>\n      <div class=\"card-body\">\n        <form #loginForm='ngForm' (ngSubmit)=\"onLogin(loginForm)\">\n          <div class=\"form-group col-12\">\n            <label>Name</label>\n            <input class=\"form-control\" required ngModel name=\"userName\">\n          </div>\n\n          <div class=\"form-group col-12\">\n            <label>Password</label>\n            <input class=\"form-control\" required type=\"password\" ngModel name=\"password\">\n          </div>\n\n          <div class=\"form-group col-12\">\n            <button [disabled]=\"!loginForm.valid\" type=\"submit\" class=\"btn btn-primary\">Login</button>\n            <button type=\"button\" class=\"btn btn-secondary ml-2\">Cancel</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/model/user';\nimport { AlertifyService } from 'src/app/services/alertify.service';\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n  registerationForm: FormGroup;\n  user: User;\n  userSubmitted: boolean;\n  constructor(private fb: FormBuilder,\n              private userService: UserService,\n              private alertify: AlertifyService ) { }\n\n  ngOnInit() {\n    // this.registerationForm = new FormGroup({\n    //   userName: new FormControl(null, Validators.required),\n    //   email: new FormControl(null, [Validators.required, Validators.email]),\n    //   password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\n    //   confirmPassword: new FormControl(null, [Validators.required]),\n    //   mobile: new FormControl(null, [Validators.required, Validators.maxLength(10)])\n    // }, this.passwordMatchingValidatior);\n    this.createRegisterationForm();\n    // this.registerationForm.controls['userName'].setValue('Default Value');\n  }\n\n  createRegisterationForm() {\n    this.registerationForm =  this.fb.group({\n      userName: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required, Validators.minLength(8)]],\n      confirmPassword: [null, Validators.required],\n      mobile: [null, [Validators.required, Validators.maxLength(10)]]\n    }, {validators: this.passwordMatchingValidatior});\n  }\n\n  passwordMatchingValidatior(fg: FormGroup): Validators {\n    return fg.get('password').value === fg.get('confirmPassword').value ? null :\n    {notmatched: true};\n  }\n\n\n  onSubmit() {\n    console.log(this.registerationForm.value);\n    this.userSubmitted = true;\n\n    if (this.registerationForm.valid) {\n      // this.user = Object.assign(this.user, this.registerationForm.value);\n      this.userService.addUser(this.userData());\n      this.onReset();\n      this.alertify.success('Congrats, you are successfully registered');\n  } else {\n      this.alertify.error('Kindly provide the required fields');\n  }\n  }\n\n  onReset() {\n    this.userSubmitted = false;\n    this.registerationForm.reset();\n  }\n\n\n  userData(): User {\n    return this.user = {\n      userName: this.userName.value,\n      email: this.email.value,\n      password: this.password.value,\n      mobile: this.mobile.value\n    }\n  }\n\n    // ------------------------------------\n  // Getter methods for all form controls\n  // ------------------------------------\n  get userName() {\n    return this.registerationForm.get('userName') as FormControl;\n  }\n\n  get email() {\n    return this.registerationForm.get('email') as FormControl;\n  }\n  get password() {\n    return this.registerationForm.get('password') as FormControl;\n  }\n  get confirmPassword() {\n    return this.registerationForm.get('confirmPassword') as FormControl;\n  }\n  get mobile() {\n    return this.registerationForm.get('mobile') as FormControl;\n  }\n  // ------------------------\n}\n","<div class=\"row\">\n  <div class=\"col-6 m-auto\">\n  <div class=\"card m-auto\">\n    <div class=\"card-header\">\n      Register\n    </div>\n    <div class=\"card-body\">\n      <form [formGroup]=\"registerationForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group col-12\">\n            <label for=\"name\" class=\"form-label\">Name</label>\n            <input type=\"text\" class=\"form-control\"\n            formControlName=\"userName\"\n            >\n            <span *ngIf=\"!userName.valid && (userName.touched || userSubmitted)\"\n            class=\"error-block\">\n              Please provide name\n            </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"email\" class=\"form-label\">Email</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"email\">\n          <span *ngIf=\"!email.valid && (email.touched || userSubmitted)\" class=\"error-block\">\n            <span *ngIf=\"email.hasError('required')\">\n                Please provide email id\n            </span>\n            <span *ngIf=\"email.hasError('email')\">\n              Please provide valid email id\n            </span>\n          </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"passwrod\" class=\"form-label\">Password</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n          <span *ngIf=\"!password.valid && (password.touched || userSubmitted)\" class=\"error-block\">\n            <span *ngIf=\"password.errors['required']\">\n              Please provide password\n            </span>\n            <span *ngIf=\"password.errors.minlength\">\n              Password should not be lesser than 8 character\n            </span>\n          </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"cpassword\" class=\"form-label\">Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\">\n          <span  *ngIf=\"!confirmPassword.valid && (confirmPassword.touched || userSubmitted)\" class=\"error-block\">\n            <span *ngIf=\"confirmPassword.hasError('required')\">\n              Please confirm password\n            </span>\n          </span>\n            <span *ngIf=\"registerationForm.hasError('notmatched') && confirmPassword.valid\" class=\"error-block\">\n              Password not matched\n            </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"mobile\" class=\"form-label\">Mobile</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"mobile\">\n          <span  *ngIf=\"!mobile.valid && (mobile.touched || userSubmitted)\" class=\"error-block\">\n              <span *ngIf=\"mobile.hasError('required')\">\n                Please provide mobile\n              </span>\n              <span *ngIf=\"mobile.hasError('maxlength')\" class=\"error-block\">\n                Invalid mobile number\n              </span>\n          </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n          <button type=\"button\" (click)=\"onReset()\" class=\"btn btn-secondary ml-2\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}